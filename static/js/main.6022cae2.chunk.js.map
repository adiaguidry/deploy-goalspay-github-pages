{"version":3,"sources":["images/kid-on-ipad.png","components/common/adminAccounts.jsx","components/common/totalPaid.js","components/common/adminGoals.jsx","components/admin.jsx","components/ItemTypes.js","components/common/accountDrop.jsx","components/common/accountDrag.jsx","components/accounts.jsx","components/goals.jsx","components/navBar.jsx","components/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","AdminLayout","accounts","handleAddAccount","newAccount","handleAccountChange","handleAccountEdit","handleDeleteAccount","className","onSubmit","htmlFor","onChange","placeholder","name","type","value","accountName","goalAmount","currentAmount","_id","map","account","key","onClick","totalPaid","payments","total","Number","_","sum","Goals","paidGoals","goals","handleAdminSubmit","handleAdminPayment","handlePaymentChange","console","log","goal","task","e","id","paid","disabled","noteStatus","note","fixed","Admin","state","this","props","filter","childCompleted","completed","Fragment","Component","AccountDrop","useDrop","accept","ItemTypes","drop","collect","monitor","isOver","canDrop","backgroundColor","ref","style","width","Dollars","amount","pg","handleAddMoneyToAccount","useDrag","item","end","dropResult","getDropResult","alert","isDragging","drag","opacity","Accounts","length","DndProvider","backend","Backend","notes","handleAddGoal","handleNewGoal","newGoal","handleChildCompletedGoal","handleDeleteGoal","handleChildFixedGoal","NavBar","user","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Home","incompleteGoals","g","cash","DisneyAccount","src","kid","alt","App","paymentAllocated","preventDefault","paidOffGoals","handleStateChangePaid","input","currentTarget","index","findIndex","setState","handleFindandEditAccount","handleCreateNewAccount","Date","now","a","i","toString","indexGoal","splice","Switch","Route","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6022cae2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kid-on-ipad.5a63f853.png\";","import React from \"react\";\n\nconst AdminLayout = ({\n  accounts,\n  handleAddAccount,\n  newAccount,\n  handleAccountChange,\n  handleAccountEdit,\n  handleDeleteAccount\n}) => {\n  return (\n    <div className=\"col-md-6\">\n      <h3>Create New Account</h3>\n      <form onSubmit={handleAddAccount}>\n        <div className=\"row\">\n          <div className=\"col-md-3 form-group\">\n            <label htmlFor=\"acount1\">Account Name</label>\n            <input\n              onChange={handleAccountChange}\n              placeholder=\"ex. Dart Wars\"\n              name=\"accountName\"\n              type=\"text\"\n              className=\"form-control\"\n              value={newAccount.accountName}\n            />\n          </div>\n          <div className=\"col-md-3 form-group\">\n            <label htmlFor=\"goal\">Goal Amout</label>\n            <input\n              value={newAccount.goalAmount}\n              onChange={handleAccountChange}\n              placeholder=\"20\"\n              name=\"goalAmount\"\n              type=\"text\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"col-md-3 form-group\">\n            <label htmlFor=\"current\">Current Amout</label>\n            <input\n              value={newAccount.currentAmount}\n              onChange={handleAccountChange}\n              placeholder=\"0\"\n              name=\"currentAmount\"\n              type=\"text\"\n              className=\"form-control\"\n            />\n          </div>\n          {newAccount._id === \"\" ? (\n            <div className=\"col-md-2 form-group\">\n              <button className=\"btn btn-primary mt-4\">Add</button>\n            </div>\n          ) : (\n            <div className=\"col-md-2 form-group\">\n              <button className=\"btn btn-success mt-4\">Save Edit</button>\n            </div>\n          )}\n        </div>\n      </form>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Account</th>\n            <th>Goal</th>\n            <th>Current</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {accounts.map(account => (\n            <tr key={account._id}>\n              <td>{account.accountName}</td>\n              <td>{account.goalAmount}</td>\n              <td>{account.currentAmount}</td>\n              <td>\n                <button\n                  onClick={() => handleAccountEdit(account)}\n                  className=\"btn btn-success mr-1\"\n                >\n                  <i className=\"fa fa-pencil\" />\n                </button>\n\n                <button\n                  onClick={() => handleDeleteAccount(account)}\n                  className=\"btn btn-danger\"\n                >\n                  <i className=\"fa fa-trash\" />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminLayout;\n","import _ from \"lodash\";\n\nexport default function totalPaid([...payments]) {\n  let total = [...payments].map(Number);\n  return _.sum(total);\n}\n","import React from \"react\";\nimport totalPaid from \"./totalPaid\";\nconst Goals = ({\n  paidGoals,\n  goals,\n  handleAdminSubmit,\n  handleAdminPayment,\n  handlePaymentChange\n}) => {\n  console.log(paidGoals);\n  return (\n    <div className=\"col-md-6\">\n      <h2>Track Goal Payments</h2>\n      <small>\n        If goal was accomplished send payment; if not send a note to help\n        complete goal to standard\n      </small>\n      {goals.map(goal => (\n        <div key={goal._id} className=\"alert alert-primary\">\n          <p className=\"\">{goal.task}</p>\n          <hr />\n          <div className=\"mb-0\">\n            <form onSubmit={handleAdminSubmit}>\n              <div className=\"form-row align-items-center\">\n                <select\n                  className=\"form-control col-md-2\"\n                  onChange={e => handlePaymentChange(e, goal)}\n                  name=\"paid\"\n                  id=\"amountToPay\"\n                  value={goal.paid}\n                >\n                  <option key=\"0\" value=\"0\">\n                    Amount..\n                  </option>\n                  <option key=\"1\" value=\".50\">\n                    .50\n                  </option>\n                  <option key=\"2\" value=\"1.00\">\n                    $1.00\n                  </option>\n                  <option key=\"3\" value=\"1.50\">\n                    $1.50\n                  </option>\n                  <option key=\"4\" value=\"2.00\">\n                    $2.00\n                  </option>\n                  <option key=\"5\" value=\"3.00\">\n                    $3.00\n                  </option>\n                </select>\n\n                <button\n                  onClick={() => handleAdminPayment(goal)}\n                  className=\"btn btn-info m-1\"\n                  disabled={goal.paid === \"0\" ? true : false}\n                >\n                  Pay\n                </button>\n                {goal.noteStatus ? (\n                  <button\n                    onClick={() => (goal.noteStatus = !goal.noteStatus)}\n                    className=\"btn btn-sm-1 btn-danger\"\n                  >\n                    Cancel\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => (goal.noteStatus = !goal.noteStatus)}\n                    className={\n                      goal.note === \"\"\n                        ? \"btn m-1 btn-success\"\n                        : \"btn m-1 btn-warning\"\n                    }\n                  >\n                    {goal.note === \"\" ? \"Send a Note\" : \"Note Sent\"}\n                  </button>\n                )}\n                {goal.noteStatus && (\n                  <div className=\"col-md-12\">\n                    <div className=\"form-row align-items-center\">\n                      <input\n                        value={goal.note}\n                        name=\"note\"\n                        onChange={e => handlePaymentChange(e, goal)}\n                        className=\"form-control\"\n                      />\n                      <button\n                        onClick={() => (goal.noteStatus = !goal.noteStatus)}\n                        className=\"btn m-1 btn-sm btn-success\"\n                      >\n                        Send\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n              <p className=\"text-success\">\n                {goal.fixed && goal.note === \"\"\n                  ? \"Note read and fixed! Can I get paid now?\"\n                  : \"\"}\n              </p>\n            </form>\n          </div>\n        </div>\n      ))}\n      <div className=\"card text-white bg-info\">\n        <h3>Total Paid: {totalPaid(paidGoals)}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Goals;\n","import React, { Component } from \"react\";\nimport AdminLayout from \"./common/adminAccounts\";\nimport Goals from \"./common/adminGoals\";\n\nclass Admin extends Component {\n  state = {};\n  render() {\n    const goals = this.props.goals.filter(\n      goal => goal.childCompleted === true && goal.completed !== true\n    );\n    const paidGoals = this.props.goals.map(goal => goal.paid);\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col-md-12 text-center\">\n            <div className=\"jumbotron\">\n              <h1>Admin</h1>\n              <h4>track childs goals and pay them at the end of the week</h4>\n            </div>\n          </div>\n        </div>\n        <div className=\"row m-4\">\n          <Goals\n            handlePaymentChange={this.props.handlePaymentChange}\n            handleAdminSubmit={this.props.handleAdminSubmit}\n            handleAdminPayment={this.props.handleAdminPayment}\n            goals={goals}\n            paidGoals={paidGoals}\n          />\n          <AdminLayout\n            accounts={this.props.accounts}\n            newAccount={this.props.newAccount}\n            handleAddAccount={this.props.handleAddAccount}\n            handleAccountChange={this.props.handleAccountChange}\n            handleAccountEdit={this.props.handleAccountEdit}\n            handleDeleteAccount={this.props.handleDeleteAccount}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Admin;\n","export default {\n  FOOD: \"food\",\n  GLASS: \"glass\",\n  PAPER: \"paper\",\n  DOLLARS: \"dollars\"\n};\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport ItemTypes from \"../ItemTypes\";\n\nconst AccountDrop = ({ account }) => {\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: ItemTypes.DOLLARS,\n    drop: () => ({ name: account.accountName, _id: account._id }),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n\n  const isActive = canDrop && isOver;\n\n  let backgroundColor = \"#17a2b8\";\n  if (isActive) {\n    backgroundColor = \"#087182\";\n  } else if (canDrop) {\n    backgroundColor = \"#60bece\";\n  }\n  return (\n    <div ref={drop} className=\"mx-2 mb-2\">\n      <div\n        className=\"card text-white \"\n        style={{ width: 18 + \"rem\", backgroundColor }}\n      >\n        <div className=\"card-header\">Saving Account</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{account.accountName}</h5>\n          <ul key={account._id} className=\"list-group list-group-flush\">\n            <li key={account._id} className=\"list-group-item text-body mb-1\">\n              Goal for savings: ${account.goalAmount}\n            </li>\n            <li className=\"list-group-item text-dark\">\n              Current savings: ${account.currentAmount}\n            </li>\n          </ul>\n          <p className=\"card-text\">\n            Keep doing your best, remember why you made your goal and you will\n            be there in no time.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountDrop;\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport ItemTypes from \"../ItemTypes\";\n\nconst Dollars = ({ name, amount, pg, handleAddMoneyToAccount }) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { name, amount, _id: pg._id, type: ItemTypes.DOLLARS },\n    end: (item, monitor) => {\n      const dropResult = monitor.getDropResult();\n      if (item && dropResult) {\n        handleAddMoneyToAccount(dropResult, item);\n        alert(\n          `You dropped ${item.amount} into ${dropResult.name} ${dropResult.id}!`\n        );\n      }\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0.4 : 1;\n  return (\n    <div className=\"card-body\">\n      <blockquote className=\"blockquote mb-0\">\n        <small\n          amount={amount}\n          ref={drag}\n          style={{ opacity }}\n          className=\"alert alert-success\"\n        >\n          <i className=\"fa fa-money fa-lg mr-1\" />${pg.paid}\n        </small>\n      </blockquote>\n    </div>\n  );\n};\n\nexport default Dollars;\n","import React, { Component } from \"react\";\nimport AccountDrop from \"./common/accountDrop\";\nimport AccountDrag from \"./common/accountDrag\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\n\nclass Accounts extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row py-5\">\n          <h2>Saving Accounts</h2>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-2 mb-1\">\n            {this.props.paidGoals.length !== 0 && (\n              <div className=\"card\">\n                <div className=\"card-header text-white bg-success h4\">\n                  You Got Paid\n                </div>\n                {this.props.paidGoals.map(pg => (\n                  <DndProvider backend={Backend}>\n                    <AccountDrag\n                      handleAddMoneyToAccount={(account, item) =>\n                        this.props.handleAddMoneyToAccount(account, item)\n                      }\n                      name={pg.task}\n                      amount={pg.paid}\n                      pg={pg}\n                      key={pg._id}\n                    />\n                  </DndProvider>\n                ))}\n              </div>\n            )}\n          </div>\n          <div className=\"col-md-10\">\n            <div className=\"row\">\n              {this.props.accounts.map(account => (\n                <DndProvider backend={Backend}>\n                  <AccountDrop account={account} key={account._id} />\n                </DndProvider>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Accounts;\n","import React, { Component } from \"react\";\n\nclass Goals extends Component {\n  state = {};\n\n  render() {\n    const goals = this.props.goals.filter(goal => goal.childCompleted !== true);\n    const completed = this.props.goals.filter(\n      goal => goal.childCompleted === true && goal.completed !== true\n    );\n    const notes = this.props.goals.filter(goal => goal.note !== \"\");\n    console.log(this.props);\n\n    return (\n      <div className=\"container\">\n        <div className=\"row pt-5\">\n          <div className=\"col-md-7\">\n            <h2>Create your Goals</h2>\n          </div>\n          <div className=\"col-md-5\">\n            <h3>Completed Goals</h3>\n            {notes.length === 0 ? (\n              \" \"\n            ) : (\n              <div className=\"alert alert-danger\">\n                <p>\n                  <i className=\"fa fa-exclamation fa-lg mr-1\" />\n                  {notes.length} of your goals came back with a note attached.\n                  Fix it to get paid.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-7\">\n            <form onSubmit={this.props.handleAddGoal} className=\"form-group\">\n              <label htmlFor=\"goal\">Goal description</label>\n\n              <textarea\n                type=\"text\"\n                name=\"goal\"\n                onChange={this.props.handleNewGoal}\n                value={this.props.newGoal.task}\n                className=\"form-control\"\n                placeholder=\"Keep room clean, clothes in the laundry basket, books on the bookshelf and bed made\"\n              />\n              <button className=\"btn btn-primary mt-1\">Add</button>\n            </form>\n            {goals.map(goal => (\n              <div className=\"alert alert-primary\">\n                <p className=\"\">\n                  {goal.task}\n                  <button\n                    onClick={() => this.props.handleChildCompletedGoal(goal)}\n                    className=\"btn btn-sm btn-success mx-2\"\n                  >\n                    <i className=\"fa fa-check-circle fa-lg\" />\n                  </button>\n                  <button\n                    onClick={() => this.props.handleDeleteGoal(goal)}\n                    className=\"btn btn-sm btn-danger\"\n                  >\n                    <i className=\"fa fa-trash fa-lg\" />\n                  </button>\n                </p>\n                <p className=\"mb-0\">\n                  {goal.note && (\n                    <span className=\"text-danger\">{goal.note}</span>\n                  )}\n                </p>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"col-md-5\">\n            <h6>\n              You've got {completed.length} completed Goals Awaiting Approval\n              and Payment\n            </h6>\n\n            {completed.map(goal => (\n              <div className=\"alert alert-info\">\n                <p>{goal.note && <h3>You've got a goal renturn</h3>}</p>\n                <p className=\"\">{goal.task}</p>\n                <p className=\"mb-0\">\n                  {goal.note && (\n                    <span className=\"text-danger\">\n                      {goal.note}\n                      <button\n                        onClick={() => this.props.handleChildFixedGoal(goal)}\n                        className=\"btn btn-info btn-sm m-1\"\n                      >\n                        Fixed it\n                      </button>\n                    </span>\n                  )}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Goals;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst NavBar = ({ user, paidGoals }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Goals Pay\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/accounts\">\n            Accounts\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/goals\">\n            Goals\n          </NavLink>\n\n          {!user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/admin\">\n                Admin\n              </NavLink>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                {user.name}\n              </NavLink>\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                Logout\n              </NavLink>\n            </React.Fragment>\n          )}\n        </div>\n      </div>\n\n      {paidGoals.length !== 0 && (\n        <p className=\"alert alert-success text-right p-1\">\n          <i className=\"fa fa-money fa-lg mr-1\" />\n          You just got paid\n        </p>\n      )}\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport kid from \"../images/kid-on-ipad.png\";\nimport totalPaid from \"./common/totalPaid\";\n\nconst Home = ({ accounts, goals }) => {\n  const incompleteGoals = goals.filter(g => g.childCompleted !== true);\n  const cash = goals.map(goal => goal.paid);\n  const DisneyAccount = accounts[0];\n  console.log(DisneyAccount);\n  return (\n    <div className=\"row m-2\">\n      <div className=\"col-md-12\">\n        <div className=\"mb-2\">\n          <div className=\"card text-white bg-dark\">\n            <div className=\"card-body \">\n              <h1>GOALS THAT PAY</h1>\n              <small>\n                You compelete your goals and you get paid. Set up savings\n                accounts to help manage your earnings.\n              </small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-4\">\n        <div className=\"\">\n          <div className=\"card text-white bg-success\">\n            <div className=\"card-body\">\n              <h2>\n                You're Rocking your goals and getting paid along the way! You\n                got {incompleteGoals.length} incomplete goals\n                {incompleteGoals.length !== 0 ? \"so get to work.\" : \".\"}\n              </h2>\n              <h5>Heres a quick breakdown of your cash:</h5>\n              <h6>\n                Your overall cash made from compeleting goals: $\n                {totalPaid(cash)}\n              </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-4\">\n        <div className=\"\">\n          <div className=\"\">\n            <div className=\"card-body text-center\">\n              <img width=\"100%\" src={kid} alt=\"\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-4\">\n        <div className=\"\">\n          <div className=\"card text-white bg-primary\">\n            <div className=\"card-body\">\n              <h2>\n                You currenty have {accounts.length} accounts set up toward your\n                savings. If you want to add or change that talk to your folks.\n              </h2>\n              <h5>Heres a quick breakdown of your accounts:</h5>\n              <h6>\n                Looks like you'll be on your way to {DisneyAccount.accountName}\n                soon. You just need $\n                {Number(DisneyAccount.goalAmount) -\n                  Number(DisneyAccount.currentAmount)}\n              </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-12\">\n        <div className=\"mb-2 text-center\">\n          <div className=\"\">\n            <h5>GOALS THAT PAY</h5>\n            <small>\n              Help your child understand how to earn money and allocate their\n              earnings.\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Admin from \"./components/admin\";\nimport \"./App.css\";\nimport Accounts from \"./components/accounts\";\nimport Goals from \"./components/goals\";\nimport NavBar from \"./components/navBar\";\nimport Home from \"./components/home\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    newGoal: {\n      _id: \" \",\n      task: \" \",\n      note: \"\"\n    },\n    newAccount: {\n      _id: \"\",\n      accountName: \"\",\n      goalAmount: \"\",\n      currentAmount: \"\"\n    },\n    accounts: [\n      {\n        _id: 1234,\n        accountName: \"Disneyland\",\n        goalAmount: \"160\",\n        currentAmount: \"0\"\n      },\n      {\n        _id: 4567,\n        accountName: \"Ice Cream\",\n        goalAmount: \"10\",\n        currentAmount: \"2\"\n      },\n      {\n        _id: 8790,\n        accountName: \"Movies\",\n        goalAmount: \"16\",\n        currentAmount: \"4\"\n      },\n      {\n        _id: 7890,\n        accountName: \"Movies\",\n        goalAmount: \"16\",\n        currentAmount: \"4\"\n      }\n    ],\n    goals: [\n      {\n        _id: 1234,\n        task: \"Empty dishwasher and load with dirty dishes\",\n        note: \"Try again, dishwasher is not empty\",\n        noteStatus: false,\n        fixed: false,\n        childCompleted: true,\n        completed: false,\n        paid: \"0\",\n        paymentAllocated: false\n      },\n      {\n        _id: 2345,\n        task: \"Have my planner signed everyday this week\",\n        note: \"\",\n        noteStatus: false,\n        fixed: false,\n        childCompleted: false,\n        completed: false,\n        paid: \"0\",\n        paymentAllocated: false\n      },\n      {\n        _id: 3456,\n        task: \"Clean bathroom when its my turn without being told\",\n        note: \"\",\n        noteStatus: false,\n        fixed: false,\n        childCompleted: false,\n        completed: false,\n        paid: \"0\",\n        paymentAllocated: false\n      },\n      {\n        _id: 34567,\n        task: \"Clean bedroom without being told\",\n        note: \"\",\n        noteStatus: false,\n        fixed: false,\n        childCompleted: false,\n        completed: false,\n        paid: \"0\",\n        paymentAllocated: false\n      }\n    ],\n    paidGoals: []\n  };\n\n  handleAdminSubmit = e => {\n    e.preventDefault();\n    this.paidOffGoals();\n    this.handleStateChangePaid();\n  };\n\n  handlePaymentChange = ({ currentTarget: input }, goal) => {\n    const goals = [...this.state.goals];\n    const index = goals.findIndex(g => g === goal);\n    goals[index][input.name] = input.value;\n    this.setState({ goals });\n  };\n\n  handleAdminPayment = goal => {\n    const goals = [...this.state.goals];\n    const index = goals.findIndex(g => g === goal);\n    goals[index].completed = true;\n  };\n\n  handleStateChangePaid = () => {\n    const paid = true;\n    this.setState({ paid });\n  };\n\n  handleAddAccount = e => {\n    e.preventDefault();\n    let newAccount = this.state.newAccount;\n    console.log(\"submit newAccount._id: \", newAccount._id);\n    newAccount._id\n      ? this.handleFindandEditAccount()\n      : this.handleCreateNewAccount();\n    newAccount = {\n      _id: \"\",\n      accountName: \"\",\n      goalAmount: \"\",\n      currentAmount: \"\"\n    };\n    this.setState({ newAccount });\n  };\n\n  handleCreateNewAccount = () => {\n    const newAccount = this.state.newAccount;\n    newAccount._id = Date.now();\n    const accounts = [this.state.newAccount, ...this.state.accounts];\n    this.setState({ accounts, newAccount });\n  };\n\n  handleFindandEditAccount = () => {\n    const newAccount = this.state.newAccount;\n    const accounts = [...this.state.accounts];\n    const index = accounts.findIndex(a => a._id === newAccount._id);\n\n    //set account to newAccount properties\n    accounts[index] = {\n      _id: newAccount._id,\n      accountName: newAccount.accountName,\n      goalAmount: newAccount.goalAmount,\n      currentAmount: newAccount.currentAmount\n    };\n    console.log(accounts, newAccount);\n    this.setState({ accounts });\n  };\n\n  handleAccountChange = ({ currentTarget: input }) => {\n    const newAccount = { ...this.state.newAccount };\n    newAccount[input.name] = input.value;\n    newAccount[input.name] = input.value;\n    newAccount[input.name] = input.value;\n    console.log(\"change newAccount._id: \", newAccount._id);\n    this.setState({ newAccount });\n  };\n\n  handleAccountEdit = account => {\n    const newAccount = {\n      _id: account._id,\n      accountName: account.accountName,\n      goalAmount: account.goalAmount,\n      currentAmount: account.currentAmount\n    };\n    console.log(\"edit newAccount._id: \", newAccount._id);\n    this.setState({ newAccount });\n  };\n  handleAddMoneyToAccount = (a, i) => {\n    const accounts = [...this.state.accounts];\n    const index = accounts.findIndex(account => account._id === a._id);\n    const currentAmount =\n      Number(accounts[index].currentAmount) + Number(i.amount);\n    accounts[index].currentAmount = currentAmount.toString();\n    const goals = [...this.state.goals];\n    const indexGoal = goals.findIndex(goal => goal._id === i._id);\n    goals[indexGoal].paymentAllocated = true;\n    this.setState({ accounts, goals });\n    this.paidOffGoals();\n  };\n\n  handleDeleteAccount = account => {\n    const accounts = [...this.state.accounts];\n    const index = accounts.findIndex(a => a._id === account._id);\n    accounts.splice(index, 1);\n    this.setState({ accounts });\n    console.log(\"delete: \", account);\n  };\n\n  paidOffGoals = () => {\n    const paidGoals = this.state.goals.filter(\n      goal => goal.completed === true && goal.paymentAllocated !== true\n    );\n    this.setState({ paidGoals });\n\n    console.log(\"paid\", paidGoals);\n  };\n\n  handleAddGoal = e => {\n    e.preventDefault();\n    const goals = [this.state.newGoal, ...this.state.goals];\n    this.setState({ goals });\n    const newGoal = { _id: \" \", task: \" \", note: \"\" };\n    this.setState({ newGoal });\n  };\n\n  handleNewGoal = e => {\n    const newGoal = { ...this.state.newGoal };\n    newGoal.task = e.currentTarget.value;\n    newGoal._id = Date.now().toString();\n    newGoal.note = \"\";\n    newGoal.childCompleted = false;\n    this.setState({ newGoal });\n  };\n\n  handleDeleteGoal = goal => {\n    const goals = [...this.state.goals];\n    const index = goals.findIndex(g => g._id === goal._id);\n    goals.splice(index, 1);\n    this.setState({ goals });\n    console.log(\"delete: \", goal);\n  };\n\n  handleChildCompletedGoal = goal => {\n    const goals = [...this.state.goals];\n    const index = goals.findIndex(g => g._id === goal._id);\n    goals[index].childCompleted = !goals[index].childCompleted;\n    this.setState({ goals });\n  };\n\n  handleChildFixedGoal = goal => {\n    const goals = [...this.state.goals];\n    const index = goals.findIndex(g => g._id === goal._id);\n    goals[index].fixed = true;\n    goals[index].note = \"\";\n    this.setState({ goals });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar paidGoals={this.state.paidGoals} />\n        <Switch>\n          <Route\n            path=\"/accounts\"\n            render={props => (\n              <Accounts\n                {...props}\n                accounts={this.state.accounts}\n                paidGoals={this.state.paidGoals}\n                handleAddMoneyToAccount={this.handleAddMoneyToAccount}\n              />\n            )}\n          />\n          <Route\n            path=\"/goals\"\n            render={props => (\n              <Goals\n                {...props}\n                goals={this.state.goals}\n                handleAddGoal={this.handleAddGoal}\n                newGoal={this.state.newGoal}\n                handleNewGoal={this.handleNewGoal}\n                handleDeleteGoal={this.handleDeleteGoal}\n                handleChildCompletedGoal={this.handleChildCompletedGoal}\n                handleChildFixedGoal={this.handleChildFixedGoal}\n              />\n            )}\n          />\n          <Route\n            path=\"/admin\"\n            render={props => (\n              <Admin\n                {...props}\n                accounts={this.state.accounts}\n                goals={this.state.goals}\n                paidGoals={this.state.paidGoals}\n                handleAdminSubmit={this.handleAdminSubmit}\n                handleAdminPayment={this.handleAdminPayment}\n                handlePaymentChange={this.handlePaymentChange}\n                handleAddAccount={this.handleAddAccount}\n                newAccount={this.state.newAccount}\n                handleAccountChange={this.handleAccountChange}\n                handleAccountEdit={this.handleAccountEdit}\n                handleDeleteAccount={this.handleDeleteAccount}\n              />\n            )}\n          />\n          <Route\n            path=\"/\"\n            render={props => (\n              <Home\n                {...props}\n                accounts={this.state.accounts}\n                goals={this.state.goals}\n              />\n            )}\n          />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}